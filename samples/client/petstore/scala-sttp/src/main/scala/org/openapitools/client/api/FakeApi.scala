/**
 * OpenAPI Petstore
 * This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object FakeApi {

def apply(baseUrl: String = "http://petstore.swagger.io/v2") = new FakeApi(baseUrl)
}

class FakeApi(baseUrl: String) {

  /**
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param `type` _type
   * @param `type`2 type
   * @param `type`3 type_
   * @param httpDebugOption http debug option (to test parameter naming option)
   */
  def getParameterNameMapping(`type`: Long, &#x60;type&#x60;2: String, &#x60;type&#x60;3: String, httpDebugOption: String
): Request[Either[ResponseException[String, Exception], Unit], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/fake/parameter-name-mapping?type=${ `type`2 }&http_debug_option=${ httpDebugOption }")
      .contentType("application/json")
      .header("_type", `type`.toString)
      .header("type_", `type`3.toString)
      .response(asJson[Unit])

}
